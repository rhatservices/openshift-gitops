*  Cluster configuration workflow

To configure an OpenShift cluster we need to

- deploy the GitOps Operator to the cluster
- deploy the cluster configuration via ArgoCD

** Bootstrapping the GitOps operator

First we need to bootstrap ArgoCD via the OpenShift GitOps operator:

  #+begin_src plantuml :file gitops-bootstrap.png
title Cluster Configuration Workflow

actor User
file "00-deploy-gitops.sh" as script
component "bootstrap/gitops/base" as bootstrap
component "components/apps/gitops-operator/base" as gitops


User -> script : Executes
script -> bootstrap : Kustomize
bootstrap -> gitops : Renders base

note bottom of gitops
	Installs the GitOps operator subscription
end note
  #+end_src

  #+RESULTS:
  [[file:gitops-bootstrap.png]]

** Deploying the cluster configuration

Because we deployed the GitOps operator in the previous step, we are now
able to create ArgoCD applications.

We leverage the [[https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#app-of-apps][App of Apps]] pattern. A cluster definition contains an
ArgoCD App of Apps that deploys applications managing a single components.

Sounds crazy? Yes, indeed. A picture is worth more than a thousand words:

  #+begin_src plantuml :file cluster-config-workflow.png
@startuml
title Cluster Configuration Workflow

actor User
file "01-configure-cluster.sh" as script
folder "bootstrap/cluster/overlay/local.ocp" as clusteroverlay
component "cluster-config-manager App of Apps" as configmanager
folder "clusters/local.ocp/argocd/apps/cluster/" as clusterapp

component "OAuth Configuration" as oauth
folder "components/argocd/apps/oauth/base" as oauthfolder
artifact "OAuth Configuration App" as oauthapp
folder "components/configuration/overlay/oauth/htpasswd" as oauthappfolder

component "chrony Configuration" as chrony
folder "components/argocd/apps/chrony/base" as chronyfolder
artifact "chrony Configuration App" as chronyapp
folder "components/apps/resource-locker/overlay/base" as chronyappfolder

component "Sealed Secrets" as sealedsecrets
folder "components/argocd/apps/sealed-secrets/base" as sealedsecretsfolder
artifact "Sealed Secrets App" as sealedsecretsapp
folder "components/apps/sealed-secrets/overlay/base" as sealedsecretsappfolder

component "Resource Locker" as resourcelocker
folder "components/argocd/apps/resource-locker/base" as resourcelockerfolder
artifact "Resource Locker App" as resourcelockerapp
folder "components/apps/resource-locker/overlay/base" as resourcelockerappfolder


User -> script : Executes
script -> clusteroverlay : Runs kustomize build
clusteroverlay -> configmanager : Deploys
configmanager -> clusterapp : kustomize build

clusterapp --> oauth
oauth --> oauthfolder : kustomize build
oauthfolder --> oauthapp : Deploys
oauthapp --> oauthappfolder : kustomize build

clusterapp --> chrony
chrony --> chronyfolder
chronyfolder --> chronyapp : Deploys
chronyapp --> chronyappfolder : kustomize build

clusterapp --> sealedsecrets
sealedsecrets --> sealedsecretsfolder
sealedsecretsfolder --> sealedsecretsapp : Deploys
sealedsecretsapp --> sealedsecretsappfolder : kustomize build

clusterapp --> resourcelocker
resourcelocker --> resourcelockerfolder
resourcelockerfolder --> resourcelockerapp : Deploys
resourcelockerapp --> resourcelockerappfolder : kustomize build


note top of configmanager
	ArgoCD application that deploys other ArgoCD
	applications via kustomize
end note

note top of clusterapp
	Kustomize configuration of all resources to be deployed.
	Resources are other ArgoCD applications.
end note

note left of oauth
	App of Apps component
end note

note left of oauthfolder
	Definition of ArgoCD application
end note

note left of oauthapp
	ArgoCD application deploying a single component
end note
@enduml
  #+end_src

  #+RESULTS:
  [[file:cluster-config-workflow.png]]
